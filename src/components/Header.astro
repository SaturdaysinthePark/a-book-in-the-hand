---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<header>
	<nav>
		<div class="site-title">
			<h2><a href="/">ðŸ“– {SITE_TITLE}</a></h2>
			<p class="site-tagline">...is better than one on the shelf</p>
		</div>
		<div class="nav-right">
			<div class="internal-links">
				<HeaderLink href="/book-reviews">Book Reviews</HeaderLink>
				<HeaderLink href="/my-lists">My Lists</HeaderLink>
				<HeaderLink href="/about">About</HeaderLink>
			</div>
			<div class="search-container">
				<button id="search-toggle" class="search-toggle" aria-label="Search">
					<svg class="search-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
						<circle cx="11" cy="11" r="8"></circle>
						<path d="m21 21-4.35-4.35"></path>
					</svg>
				</button>
				<input type="text" id="global-search" class="search-input" placeholder="Search..." />
			</div>
			<button id="mobile-menu-toggle" class="mobile-menu-toggle" aria-label="Menu">
				<svg class="hamburger-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<line x1="3" y1="6" x2="21" y2="6"></line>
					<line x1="3" y1="12" x2="21" y2="12"></line>
					<line x1="3" y1="18" x2="21" y2="18"></line>
				</svg>
			</button>
		</div>
	</nav>
</header>
<style>
	header {
		margin: 0;
		padding: 2rem 0;
		background: var(--background);
		width: 100%;
		overflow-x: hidden;
	}
	
	nav {
		max-width: 1400px;
		margin: 0 auto;
		padding: 0 1rem;
		display: flex;
		align-items: center;
		justify-content: space-between;
		position: relative;
		width: 100%;
		box-sizing: border-box;
	}
	
	.site-title {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		line-height: 1.1;
	}
	
	h2 {
		margin: 0;
		font-size: 2.2rem;
		font-family: 'Poppins', 'Inter', 'Helvetica Neue', Arial, sans-serif;
		font-weight: 700;
		letter-spacing: -0.02em;
		color: var(--primary);
		line-height: 1.1;
	}
	
	.site-tagline {
		font-size: 0.9rem;
		font-style: italic;
		color: rgba(var(--gray-dark), 0.7);
		margin: 0;
		margin-left: 1rem;
		margin-top: -0.2rem;
		font-family: 'Inter', 'Helvetica Neue', Arial, sans-serif;
		font-weight: 400;
	}

	h2 a,
	h2 a.active {
		text-decoration: none;
		color: inherit;
		position: relative;
	}
	
	h2 a::after {
		content: none !important;
	}
	
	h2 a:hover::after {
		content: none !important;
	}
	
	.nav-right {
		display: flex;
		gap: 1rem;
		align-items: center;
		flex-wrap: nowrap;
	}

	.search-container {
		display: flex;
		align-items: center;
		position: relative;
		order: 0;
	}

	.search-toggle {
		background: none;
		border: none;
		cursor: pointer;
		padding: 0.75rem;
		border-radius: 8px;
		transition: all 0.2s ease;
		color: var(--primary);
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.search-icon {
		width: 18px;
		height: 18px;
	}

	.search-toggle:hover {
		background: rgba(var(--gray), 0.1);
		color: var(--accent);
	}

	.search-input {
		position: absolute;
		top: 50%;
		right: 100%;
		transform: translateY(-50%);
		width: 0;
		padding: 0.5rem 0;
		border: 1px solid transparent;
		border-radius: 20px;
		font-size: 0.85rem;
		background: transparent;
		transition: all 0.3s ease;
		overflow: hidden;
		white-space: nowrap;
		outline: none;
		box-shadow: none;
		opacity: 0;
		pointer-events: none;
	}

	.search-input.active {
		width: 180px;
		padding: 0.5rem 1rem;
		border-color: rgba(var(--gray), 0.3);
		background: var(--paper);
		box-shadow: 0 2px 8px rgba(0,0,0,0.1);
		opacity: 1;
		pointer-events: auto;
		margin-right: 0.5rem;
	}

	.search-input:focus {
		border-color: var(--accent);
	}

	.internal-links {
		display: flex;
		gap: 2rem;
		align-items: center;
		order: 1;
	}

	.mobile-menu-toggle {
		display: none;
		background: none;
		border: none;
		cursor: pointer;
		padding: 0.75rem;
		border-radius: 8px;
		transition: all 0.2s ease;
		color: var(--primary);
		order: 2;
	}

	.mobile-menu-toggle:hover {
		background: rgba(var(--gray), 0.1);
		color: var(--accent);
	}

	.hamburger-icon {
		width: 24px;
		height: 24px;
	}
	
	nav a {
		padding: 0.5rem 0;
		color: var(--primary);
		text-decoration: none;
		font-weight: 500;
		font-size: 1rem;
		transition: all 0.2s ease;
		position: relative;
	}
	
	nav a:hover {
		color: var(--accent);
	}
	
	nav a:hover::after {
		content: '';
		position: absolute;
		bottom: -0.2rem;
		left: 0;
		right: 0;
		height: 1px;
		background: rgba(139, 115, 85, 0.3);
	}
	
	nav a.active {
		color: var(--accent);
	}
	
	nav a.active::after {
		content: '';
		position: absolute;
		bottom: -0.2rem;
		left: 0;
		right: 0;
		height: 1px;
		background: rgba(139, 115, 85, 0.4);
	}
	
	/* Mobile styles */
	@media (max-width: 768px) {
		header {
			padding: 1.5rem 0;
		}
		
		nav {
			padding: 0 1rem;
			flex-direction: row;
			justify-content: space-between;
			align-items: center;
		}
		
		h2 {
			font-size: 1.8rem;
		}
		
		.site-tagline {
			font-size: 0.75rem;
			margin-left: 0.5rem;
			margin-top: -0.1rem;
		}
		
		.site-title {
			text-align: left;
		}
		
		.nav-right {
			flex-direction: row;
			gap: 0.5rem;
			align-items: center;
			position: relative;
		}

		.internal-links {
			display: none;
			position: fixed;
			top: 5rem;
			right: 1rem;
			background: var(--paper);
			border: 1px solid var(--border);
			border-radius: 8px;
			box-shadow: 0 4px 12px rgba(0,0,0,0.1);
			padding: 1rem 0;
			min-width: 160px;
			flex-direction: column;
			gap: 0;
			z-index: 1001;
		}
		
		.internal-links.show {
			display: flex;
		}
		
		.internal-links a {
			padding: 0.75rem 1.5rem;
			display: block;
			border-bottom: none;
		}
		
		.internal-links a:hover {
			background: rgba(var(--gray-light), 0.5);
		}

		.mobile-menu-toggle {
			display: flex;
		}

		.search-input.active {
			width: 200px;
			right: 3.5rem;
		}
		
		.nav-right {
			gap: 0.5rem;
		}
		
		nav {
			padding: 0 1rem;
			max-width: 100%;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const searchToggle = document.getElementById('search-toggle');
		const searchInput = document.getElementById('global-search');
		const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
		const internalLinks = document.querySelector('.internal-links');
		const header = document.querySelector('header');
		let lastScrollY = window.scrollY;

		// Search functionality
		searchToggle.addEventListener('click', function() {
			searchInput.classList.toggle('active');
			if (searchInput.classList.contains('active')) {
				searchInput.focus();
			}
		});

		// Close search when clicking outside
		document.addEventListener('click', function(e) {
			if (!searchToggle.contains(e.target) && !searchInput.contains(e.target)) {
				searchInput.classList.remove('active');
			}
		});

		// Close search on escape
		searchInput.addEventListener('keydown', function(e) {
			if (e.key === 'Escape') {
				searchInput.classList.remove('active');
				searchInput.blur();
			} else if (e.key === 'Enter') {
				const query = searchInput.value.trim();
				if (query) {
					// Redirect to a search results page or filter current page
					window.location.href = `/search?q=${encodeURIComponent(query)}`;
				}
			}
		});

		// Mobile menu functionality
		mobileMenuToggle.addEventListener('click', function() {
			internalLinks.classList.toggle('show');
		});

		// Close mobile menu when clicking outside
		document.addEventListener('click', function(e) {
			if (!mobileMenuToggle.contains(e.target) && !internalLinks.contains(e.target)) {
				internalLinks.classList.remove('show');
			}
		});

		// Sticky navigation with scroll behavior
		window.addEventListener('scroll', function() {
			const currentScrollY = window.scrollY;
			
			if (currentScrollY > 100) {
				header.style.position = 'fixed';
				header.style.top = '0';
				header.style.left = '0';
				header.style.right = '0';
				header.style.zIndex = '1000';
				header.style.backgroundColor = 'rgba(254, 252, 249, 0.95)';
				header.style.backdropFilter = 'blur(10px)';
				header.style.borderBottom = '1px solid rgba(232, 229, 224, 0.3)';
				header.style.transition = 'transform 0.3s ease';
				
				if (currentScrollY > lastScrollY) {
					// Scrolling down
					header.style.transform = 'translateY(-100%)';
				} else {
					// Scrolling up
					header.style.transform = 'translateY(0)';
				}
			} else {
				header.style.position = 'relative';
				header.style.backgroundColor = 'var(--background)';
				header.style.backdropFilter = 'none';
				header.style.borderBottom = 'none';
				header.style.transform = 'none';
			}
			
			lastScrollY = currentScrollY;
		});
	});
</script>
