---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
---

<header>
	<nav>
		<div class="site-title">
			<h2><a href="/">ðŸ“– {SITE_TITLE}</a></h2>
			<p class="site-tagline">...is better than one on the shelf</p>
		</div>
		<div class="nav-right">
			<div class="internal-links">
				<HeaderLink href="/book-reviews">Book Reviews</HeaderLink>
				<HeaderLink href="/my-lists">My Lists</HeaderLink>
				<HeaderLink href="/about">About</HeaderLink>
			</div>
			<div class="search-container">
				<button id="search-toggle" class="search-toggle" aria-label="Search">
					<svg class="search-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
						<circle cx="11" cy="11" r="8"></circle>
						<path d="m21 21-4.35-4.35"></path>
					</svg>
				</button>
				<input type="text" id="global-search" class="search-input" placeholder="Search..." />
			</div>
			<button id="mobile-menu-toggle" class="mobile-menu-toggle" aria-label="Menu" onclick="
				// SLIDE-DOWN PANEL APPROACH: No z-index issues
				console.log('Button clicked!');
				
				// Only work on mobile
				if (window.innerWidth > 768) {
					console.log('Desktop - ignoring click');
					return;
				}
				
				const header = document.querySelector('header');
				let panel = document.querySelector('.mobile-slide-panel');
				
				console.log('Header found:', !!header);
				console.log('Panel exists:', !!panel);
				
				if (!panel) {
					console.log('Creating new panel...');
					// Create slide panel after header
					panel = document.createElement('div');
					panel.className = 'mobile-slide-panel';
					panel.style.cssText = `
						width: 100%;
						background: linear-gradient(135deg, rgba(254, 252, 249, 0.98), rgba(254, 252, 249, 0.95));
						backdrop-filter: blur(10px);
						border-bottom: 1px solid rgba(139, 115, 85, 0.2);
						box-shadow: 0 8px 32px rgba(139, 115, 85, 0.15);
						overflow: hidden;
						max-height: 0px;
						transition: max-height 0.4s ease, opacity 0.4s ease, padding 0.4s ease;
						padding: 0px;
						opacity: 0;
					`;
					panel.innerHTML = `
						<a href='/book-reviews' style='display: block; padding: 1rem 1.5rem; text-decoration: none; color: #2C2C2C; font-size: 1rem; font-weight: 500; border-bottom: 1px solid rgba(139, 115, 85, 0.08); transition: all 0.3s ease;'>Book Reviews</a>
						<a href='/my-lists' style='display: block; padding: 1rem 1.5rem; text-decoration: none; color: #2C2C2C; font-size: 1rem; font-weight: 500; border-bottom: 1px solid rgba(139, 115, 85, 0.08); transition: all 0.3s ease;'>My Lists</a>
						<a href='/about' style='display: block; padding: 1rem 1.5rem; text-decoration: none; color: #2C2C2C; font-size: 1rem; font-weight: 500; transition: all 0.3s ease;'>About</a>
					`;
					
					// Insert panel right after header
					header.parentNode.insertBefore(panel, header.nextSibling);
					console.log('Panel created and inserted');
					
					// Close on link click
					panel.querySelectorAll('a').forEach(link => {
						link.onclick = (e) => {
							panel.classList.remove('show');
							console.log('Panel closed via link click');
							// Let the link navigate normally
						};
					});
				}
				
				// Toggle panel with direct style manipulation
				if (panel.classList.contains('show')) {
					// Close panel
					panel.style.maxHeight = '0px';
					panel.style.padding = '0px';
					panel.style.opacity = '0';
					panel.classList.remove('show');
					console.log('Panel closed');
				} else {
					// Open panel
					panel.style.maxHeight = '250px';
					panel.style.padding = '0.75rem 0';
					panel.style.opacity = '1';
					panel.classList.add('show');
					console.log('Panel opened');
				}
				console.log('Panel show class:', panel.classList.contains('show'));
				console.log('Panel style max-height:', panel.style.maxHeight);
				console.log('Panel computed max-height:', window.getComputedStyle(panel).maxHeight);
			">
				<svg class="hamburger-icon" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
					<line x1="3" y1="6" x2="21" y2="6"></line>
					<line x1="3" y1="12" x2="21" y2="12"></line>
					<line x1="3" y1="18" x2="21" y2="18"></line>
				</svg>
			</button>
		</div>
	</nav>
</header>
<style>
	header {
		margin: 0;
		padding: 2rem 0;
		background: var(--background);
		width: 100%;
		overflow-x: hidden;
		overflow-y: visible;
	}
	
	nav {
		max-width: 1400px;
		margin: 0 auto;
		padding: 0 1rem;
		display: flex;
		align-items: center;
		justify-content: space-between;
		position: relative;
		width: 100%;
		box-sizing: border-box;
		overflow: visible;
	}
	
	.site-title {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		line-height: 1.1;
	}
	
	h2 {
		margin: 0;
		font-size: 2.2rem;
		font-family: 'Poppins', 'Inter', 'Helvetica Neue', Arial, sans-serif;
		font-weight: 700;
		letter-spacing: -0.02em;
		color: var(--primary);
		line-height: 1.1;
	}
	
	.site-tagline {
		font-size: 0.9rem;
		font-style: italic;
		color: rgba(var(--gray-dark), 0.7);
		margin: 0;
		margin-left: 1rem;
		margin-top: -0.2rem;
		font-family: 'Inter', 'Helvetica Neue', Arial, sans-serif;
		font-weight: 400;
	}

	h2 a,
	h2 a.active {
		text-decoration: none;
		color: inherit;
		position: relative;
	}
	
	h2 a::after {
		content: none !important;
	}
	
	h2 a:hover::after {
		content: none !important;
	}
	
	.nav-right {
		display: flex;
		gap: 1rem;
		align-items: center;
		flex-wrap: nowrap;
	}

	.search-container {
		display: flex;
		align-items: center;
		position: relative;
		order: 0;
	}

	.search-toggle {
		background: none;
		border: none;
		cursor: pointer;
		padding: 0.75rem;
		border-radius: 8px;
		transition: all 0.2s ease;
		color: var(--primary);
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.search-icon {
		width: 18px;
		height: 18px;
	}

	.search-toggle:hover {
		background: rgba(var(--gray), 0.1);
		color: var(--accent);
	}

	.search-input {
		position: absolute;
		top: 50%;
		right: 100%;
		transform: translateY(-50%);
		width: 0;
		padding: 0.5rem 0;
		border: 1px solid transparent;
		border-radius: 20px;
		font-size: 0.85rem;
		background: transparent;
		transition: all 0.3s ease;
		overflow: hidden;
		white-space: nowrap;
		outline: none;
		box-shadow: none;
		opacity: 0;
		pointer-events: none;
	}

	.search-input.active {
		width: 180px;
		padding: 0.5rem 1rem;
		border-color: rgba(var(--gray), 0.3);
		background: var(--paper);
		box-shadow: 0 2px 8px rgba(0,0,0,0.1);
		opacity: 1;
		pointer-events: auto;
		margin-right: 0.5rem;
	}

	.search-input:focus {
		border-color: var(--accent);
	}

	.internal-links {
		display: flex;
		gap: 2rem;
		align-items: center;
		order: 1;
	}

	.mobile-menu-toggle {
		display: none;
		background: none;
		border: none;
		cursor: pointer;
		padding: 0.75rem;
		border-radius: 8px;
		transition: all 0.2s ease;
		color: var(--primary);
		order: 2;
	}

	.mobile-menu-toggle:hover {
		background: rgba(var(--gray), 0.1);
		color: var(--accent);
	}

	.hamburger-icon {
		width: 24px;
		height: 24px;
	}
	
	nav a {
		padding: 0.5rem 0;
		color: var(--primary);
		text-decoration: none;
		font-weight: 500;
		font-size: 1rem;
		transition: all 0.2s ease;
		position: relative;
	}
	
	nav a:hover {
		color: var(--accent);
	}
	
	nav a:hover::after {
		content: '';
		position: absolute;
		bottom: -0.2rem;
		left: 0;
		right: 0;
		height: 1px;
		background: rgba(139, 115, 85, 0.3);
	}
	
	nav a.active {
		color: var(--accent);
	}
	
	nav a.active::after {
		content: '';
		position: absolute;
		bottom: -0.2rem;
		left: 0;
		right: 0;
		height: 1px;
		background: rgba(139, 115, 85, 0.4);
	}
	
	/* Mobile styles */
	@media (max-width: 768px) {
		header {
			padding: 1.5rem 0;
		}
		
		nav {
			padding: 0 1rem;
			flex-direction: row;
			justify-content: space-between;
			align-items: center;
			max-width: 100%;
		}
		
		h2 {
			font-size: 1.8rem;
		}
		
		.site-tagline {
			font-size: 0.75rem;
			margin-left: 0.5rem;
			margin-top: -0.1rem;
		}
		
		.site-title {
			text-align: left;
		}
		
		.nav-right {
			flex-direction: row;
			gap: 0.5rem;
			align-items: center;
			position: relative;
			z-index: 1000;
		}

		/* Hide navigation links by default on mobile */
		.internal-links {
			display: none;
			position: fixed;
			top: 70px;
			right: 1rem;
			background: white;
			border: 2px solid var(--accent);
			border-radius: 8px;
			box-shadow: 0 8px 32px rgba(0,0,0,0.25);
			padding: 0.5rem 0;
			min-width: 140px;
			flex-direction: column;
			gap: 0;
			z-index: 999999;
			transform: translateZ(0);
			will-change: transform;
		}
		
		/* Show navigation links when .show class is added */
		.internal-links.show {
			display: flex !important;
		}
		
		.internal-links a {
			padding: 0.75rem 1rem;
			display: block;
			border-bottom: none;
			font-size: 1rem;
			font-weight: 500;
			text-align: left;
			transition: all 0.2s ease;
			white-space: nowrap;
		}
		
		.internal-links a:hover {
			background: rgba(139, 115, 85, 0.1);
		}

		/* Show hamburger button on mobile */
		.mobile-menu-toggle {
			display: flex !important;
			align-items: center;
			justify-content: center;
		}

		.search-input.active {
			width: 200px;
			right: 3.5rem;
		}
	}
	
	/* Extra narrow screens */
	@media (max-width: 480px) {
		.internal-links {
			right: 0;
			min-width: 120px;
			left: auto;
			transform: translateX(0);
		}
	}
	
	/* Very narrow screens like iPhone 12 Pro */
	@media (max-width: 390px) {
		.internal-links {
			right: -0.5rem;
			min-width: 110px;
		}
	}
	
	/* SLIDE-DOWN PANEL: Works with document flow, no z-index issues */
	.mobile-slide-panel {
		width: 100%;
		background: linear-gradient(135deg, rgba(254, 252, 249, 0.98), rgba(254, 252, 249, 0.95));
		backdrop-filter: blur(10px);
		border-bottom: 1px solid rgba(139, 115, 85, 0.2);
		box-shadow: 0 8px 32px rgba(139, 115, 85, 0.15);
		overflow: hidden;
		max-height: 0 !important;
		transition: max-height 0.4s cubic-bezier(0.4, 0, 0.2, 1), 
		            opacity 0.4s ease,
		            padding 0.4s ease !important;
		padding: 0 !important;
		opacity: 0;
	}
	
	.mobile-slide-panel.show {
		max-height: 250px !important;
		padding: 0.75rem 0 !important;
		opacity: 1;
	}
	
	.mobile-slide-panel a {
		display: flex;
		align-items: center;
		padding: 1rem 1.5rem;
		text-decoration: none;
		color: var(--primary);
		font-size: 1rem;
		font-weight: 500;
		border-bottom: 1px solid rgba(139, 115, 85, 0.08);
		transition: all 0.3s ease;
		position: relative;
		background: transparent;
	}
	
	.mobile-slide-panel a:last-child {
		border-bottom: none;
	}
	
	.mobile-slide-panel a:hover {
		background: rgba(139, 115, 85, 0.08);
		color: var(--accent);
		padding-left: 2rem;
		transform: translateX(4px);
	}
	
	.mobile-slide-panel a:active {
		background: rgba(139, 115, 85, 0.15);
		transform: translateX(2px) scale(0.98);
	}
	
	/* Simpler link animations */
	.mobile-slide-panel a {
		opacity: 1;
	}
	
	/* Only show on mobile */
	@media (max-width: 768px) {
		.mobile-slide-panel {
			display: block;
		}
	}
	
	@media (min-width: 769px) {
		.mobile-slide-panel {
			display: none !important;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const searchToggle = document.getElementById('search-toggle');
		const searchInput = document.getElementById('global-search');
		const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
		const internalLinks = document.querySelector('.internal-links');
		const header = document.querySelector('header');
		let lastScrollY = window.scrollY;

		// Debug: Check if elements are found
		console.log('Elements found:', {
			searchToggle: !!searchToggle,
			searchInput: !!searchInput,
			mobileMenuToggle: !!mobileMenuToggle,
			internalLinks: !!internalLinks,
			header: !!header
		});

		// Search functionality
		searchToggle.addEventListener('click', function() {
			searchInput.classList.toggle('active');
			if (searchInput.classList.contains('active')) {
				searchInput.focus();
			}
		});

		// Close search when clicking outside
		document.addEventListener('click', function(e) {
			if (!searchToggle.contains(e.target) && !searchInput.contains(e.target)) {
				searchInput.classList.remove('active');
			}
		});

		// Close search on escape
		searchInput.addEventListener('keydown', function(e) {
			if (e.key === 'Escape') {
				searchInput.classList.remove('active');
				searchInput.blur();
			} else if (e.key === 'Enter') {
				const query = searchInput.value.trim();
				if (query) {
					// Redirect to a search results page or filter current page
					window.location.href = `/search?q=${encodeURIComponent(query)}`;
				}
			}
		});

		// SLIDE-DOWN PANEL: Click outside to close
		document.addEventListener('click', function(e) {
			const panel = document.querySelector('.mobile-slide-panel');
			const toggleButton = document.getElementById('mobile-menu-toggle');
			
			if (panel && toggleButton && panel.classList.contains('show')) {
				// Close if clicking outside the panel and not on the toggle button
				if (!panel.contains(e.target) && !toggleButton.contains(e.target)) {
					panel.classList.remove('show');
					console.log('Panel closed by clicking outside');
				}
			}
		});

		// Sticky navigation with scroll behavior
		window.addEventListener('scroll', function() {
			const currentScrollY = window.scrollY;
			const isMenuOpen = internalLinks.classList.contains('show');
			
			if (currentScrollY > 100) {
				header.style.position = 'fixed';
				header.style.top = '0';
				header.style.left = '0';
				header.style.right = '0';
				header.style.zIndex = '10000';
				header.style.backgroundColor = 'rgba(254, 252, 249, 0.95)';
				header.style.backdropFilter = 'blur(10px)';
				header.style.borderBottom = '1px solid rgba(232, 229, 224, 0.3)';
				header.style.transition = 'transform 0.3s ease';
				
				// Don't hide header if mobile menu is open
				if (!isMenuOpen && currentScrollY > lastScrollY) {
					// Scrolling down
					header.style.transform = 'translateY(-100%)';
				} else {
					// Scrolling up or menu is open
					header.style.transform = 'translateY(0)';
				}
			} else {
				header.style.position = 'relative';
				header.style.backgroundColor = 'var(--background)';
				header.style.backdropFilter = 'none';
				header.style.borderBottom = 'none';
				header.style.transform = 'none';
			}
			
			lastScrollY = currentScrollY;
		});
	});
</script>
