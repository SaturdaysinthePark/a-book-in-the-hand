---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const allPosts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const query = Astro.url.searchParams.get('q') || '';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title="Search Results - A Book in the Hand" description="Search results for book reviews and reading lists" />
	</head>
	<body>
		<Header />
		<main>
			<div class="search-results">
				<h1>Search Results</h1>
				{query && (
					<p class="search-query">Showing results for: "<strong>{query}</strong>"</p>
				)}
				<div class="posts-gallery" id="search-results">
					{allPosts.map((post) => (
						<article class="post-item" 
							data-title={post.data.title.toLowerCase()} 
							data-book-title={post.data.bookTitle ? post.data.bookTitle.toLowerCase() : ''} 
							data-author={post.data.author ? post.data.author.toLowerCase() : ''}
							data-description={post.data.description ? post.data.description.toLowerCase() : ''}
							data-tags={post.data.tags ? post.data.tags.join(' ').toLowerCase() : ''}>
							<a href={`/blog/${post.id.replace(/\/(\d{2})-/, '/$1/')}/`} class="post-link">
								<div class="post-image">
									{post.data.heroImage ? (
										<img src={post.data.heroImage} alt={post.data.bookTitle || post.data.title} />
									) : (
										<div class="placeholder-image">
											<span>{post.data.postType === 'list' ? 'ðŸ“š' : 'ðŸ“–'}</span>
										</div>
									)}
								</div>
								<div class="post-info">
									<h3>{post.data.bookTitle || post.data.title}</h3>
									{post.data.rating && (
										<div class="rating">
											{'â˜…'.repeat(post.data.rating)}{'â˜†'.repeat(5 - post.data.rating)}
										</div>
									)}
									<div class="post-date">
										<FormattedDate date={post.data.pubDate} />
									</div>
								</div>
							</a>
						</article>
					))}
				</div>
				<div id="no-results" class="no-results" style="display: none;">
					<p>No results found for "{query}". Try searching for a book title, author, or keyword.</p>
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html>

<style>
	main {
		max-width: 1400px;
		margin: 0 auto;
		padding: 2rem 1rem;
		width: 100%;
		box-sizing: border-box;
	}

	.search-results h1 {
		font-size: 2.5rem;
		font-weight: 700;
		color: var(--primary);
		margin-bottom: 1rem;
	}

	.search-query {
		font-size: 1.1rem;
		color: rgba(var(--gray-dark), 0.8);
		margin-bottom: 2rem;
	}

	.posts-gallery {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
		gap: 2rem;
		width: 100%;
		max-width: 100%;
	}

	.post-item {
		background: transparent;
		transition: transform 0.2s ease;
	}

	.post-item:hover {
		transform: translateY(-2px);
	}

	.post-item.hidden {
		display: none;
	}

	.post-link {
		text-decoration: none;
		color: inherit;
		display: block;
	}

	.post-image {
		width: 100%;
		aspect-ratio: 2/3;
		background: linear-gradient(135deg, rgba(var(--gray-light), 0.3), rgba(var(--accent), 0.1));
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 8px;
		margin-bottom: 1rem;
		overflow: hidden;
	}

	.post-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.placeholder-image {
		font-size: 2.5rem;
		color: rgba(var(--gray), 0.6);
	}

	.post-info h3 {
		font-size: 0.9rem;
		font-weight: 600;
		margin-bottom: 0.5rem;
		color: var(--primary);
		line-height: 1.3;
	}

	.rating {
		font-size: 0.9rem;
		margin-bottom: 0.5rem;
		color: #fbbf24;
		letter-spacing: 0.05em;
	}

	.post-date {
		font-size: 0.8rem;
		color: rgba(var(--gray-dark), 0.7);
	}

	.no-results {
		text-align: center;
		padding: 3rem 1rem;
		color: rgba(var(--gray-dark), 0.7);
		font-size: 1.1rem;
	}

	@media (max-width: 768px) {
		main {
			padding: 1rem 1rem;
		}
		
		.search-results h1 {
			font-size: 2rem;
		}
		
		.posts-gallery {
			grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
			gap: 1rem;
		}
	}

	@media (max-width: 480px) {
		main {
			padding: 0.75rem 0.75rem;
		}
		
		.posts-gallery {
			grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
			gap: 0.75rem;
		}
		
		.post-info h3 {
			font-size: 0.8rem;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const urlParams = new URLSearchParams(window.location.search);
		const query = urlParams.get('q');
		
		if (query) {
			const searchTerm = query.toLowerCase();
			const postItems = document.querySelectorAll('.post-item');
			const noResults = document.getElementById('no-results');
			let hasResults = false;

			postItems.forEach(item => {
				const title = item.getAttribute('data-title') || '';
				const bookTitle = item.getAttribute('data-book-title') || '';
				const author = item.getAttribute('data-author') || '';
				const description = item.getAttribute('data-description') || '';
				const tags = item.getAttribute('data-tags') || '';

				const searchableText = `${title} ${bookTitle} ${author} ${description} ${tags}`;
				
				if (searchableText.includes(searchTerm)) {
					item.classList.remove('hidden');
					hasResults = true;
				} else {
					item.classList.add('hidden');
				}
			});

			if (!hasResults) {
				noResults.style.display = 'block';
			}
		}
	});
</script>